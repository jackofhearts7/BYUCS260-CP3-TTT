{"ast":null,"code":"import _slicedToArray from\"/usr/share/caddy/BYUCS260-CP3-TTT/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Importing the CSS for the board\nimport\"./board.css\";// Importing the useState hook, useEffect hook and useRef hook\nimport{useState,useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Board=function Board(_ref){var reset=_ref.reset,setReset=_ref.setReset,winner=_ref.winner,setWinner=_ref.setWinner;// Creating a turn state, which indicates the current turn\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),turn=_useState2[0],setTurn=_useState2[1];// Creating a data state, which contains the\n// current picture of the board\nvar _useState3=useState(['','','','','','','','','']),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];// Creating a reference for the board\nvar boardRef=useRef(null);// Function to draw on the board\nvar draw=function draw(event,index){// Draws only if the position is not taken\n// and winner is not decided yet\nif(data[index-1]===''&&winner===''){// Draws X if it's player 1's turn else draws O\nvar current=turn===0?\"X\":\"O\";// Updating the data state\ndata[index-1]=current;//Drawing on the board\nevent.target.innerText=current;// Switching the turn\nsetTurn(turn===0?1:0);}};// UseEffect hook used to reset the board whenever\n// a winner is decided\nuseEffect(function(){// Clearing the data state\nsetData(['','','','','','','','','']);// Getting all the children(cells) of the board\nvar cells=boardRef.current.children;// Clearing out the board\nfor(var i=0;i<9;i++){cells[i].innerText='';}// Resetting the turn to player 0\nsetTurn(0);// Resetting the winner\nsetWinner('');setReset(false);},[reset,setReset,setWinner]);// useEffect hook used to check for a winner\nuseEffect(function(){// Checks for the win condition in rows\nvar checkRow=function checkRow(){var ans=false;for(var i=0;i<9;i+=3){ans|=data[i]===data[i+1]&&data[i]===data[i+2]&&data[i]!=='';}return ans;};// Checks for the win condition in cols\nvar checkCol=function checkCol(){var ans=false;for(var i=0;i<3;i++){ans|=data[i]===data[i+3]&&data[i]===data[i+6]&&data[i]!=='';}return ans;};// Checks for the win condition in diagonals\nvar checkDiagonal=function checkDiagonal(){return data[0]===data[4]&&data[0]===data[8]&&data[0]!==''||data[2]===data[4]&&data[2]===data[6]&&data[2]!=='';};// Checks if at all a win condition is present\nvar checkWin=function checkWin(){return checkRow()||checkCol()||checkDiagonal();};// Checks for a tie\nvar checkTie=function checkTie(){var count=0;data.forEach(function(cell){if(cell!==''){count++;}});return count===9;};// Setting the winner in case of a win\nif(checkWin()){setWinner(turn===0?\"Player 2 Wins!\":\"Player 1 Wins!\");}else if(checkTie()){// Setting the winner to tie in case of a tie\nsetWinner(\"It's a Tie!\");}});return/*#__PURE__*/_jsxs(\"div\",{ref:boardRef,className:\"board\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input input-1\",onClick:function onClick(e){return draw(e,1);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-2\",onClick:function onClick(e){return draw(e,2);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-3\",onClick:function onClick(e){return draw(e,3);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-4\",onClick:function onClick(e){return draw(e,4);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-5\",onClick:function onClick(e){return draw(e,5);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-6\",onClick:function onClick(e){return draw(e,6);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-7\",onClick:function onClick(e){return draw(e,7);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-8\",onClick:function onClick(e){return draw(e,8);}}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-9\",onClick:function onClick(e){return draw(e,9);}})]});};export default Board;","map":{"version":3,"names":["useState","useEffect","useRef","Board","reset","setReset","winner","setWinner","turn","setTurn","data","setData","boardRef","draw","event","index","current","target","innerText","cells","children","i","checkRow","ans","checkCol","checkDiagonal","checkWin","checkTie","count","forEach","cell","e"],"sources":["/usr/share/caddy/BYUCS260-CP3-TTT/src/board.js"],"sourcesContent":["// Importing the CSS for the board\nimport \"./board.css\";\n\n// Importing the useState hook, useEffect hook and useRef hook\nimport { useState, useEffect, useRef } from \"react\";\n\nconst Board = ({ reset, setReset, winner, setWinner }) => {\n\n\t// Creating a turn state, which indicates the current turn\n\tconst [turn, setTurn] = useState(0);\n\n\t// Creating a data state, which contains the\n\t// current picture of the board\n\tconst [data, setData] = useState(['', '', '', '', '',\n\t\t'', '', '', ''])\n\n\t// Creating a reference for the board\n\tconst boardRef = useRef(null);\n\n\t// Function to draw on the board\n\tconst draw = (event, index) => {\n\t\t// Draws only if the position is not taken\n\t\t// and winner is not decided yet\n\t\tif (data[index - 1] === '' && winner === '') {\n\n\t\t\t// Draws X if it's player 1's turn else draws O\n\t\t\tconst current = turn === 0 ? \"X\" : \"O\"\n\n\t\t\t// Updating the data state\n\t\t\tdata[index - 1] = current;\n\n\t\t\t//Drawing on the board\n\t\t\tevent.target.innerText = current;\n\n\t\t\t// Switching the turn\n\t\t\tsetTurn(turn === 0 ? 1 : 0)\n\t\t}\n\t}\n\n\t// UseEffect hook used to reset the board whenever\n\t// a winner is decided\n\tuseEffect(() => {\n\n\t\t// Clearing the data state\n\t\tsetData(['', '', '', '', '', '', '', '', '']);\n\n\t\t// Getting all the children(cells) of the board\n\t\tconst cells = boardRef.current.children\n\n\t\t// Clearing out the board\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tcells[i].innerText = '';\n\t\t}\n\n\t\t// Resetting the turn to player 0\n\t\tsetTurn(0);\n\n\t\t// Resetting the winner\n\t\tsetWinner('');\n\t\tsetReset(false);\n\t}, [reset, setReset, setWinner])\n\n\n\t// useEffect hook used to check for a winner\n\tuseEffect(() => {\n\n\t\t// Checks for the win condition in rows\n\t\tconst checkRow = () => {\n\t\t\tlet ans = false;\n\t\t\tfor (let i = 0; i < 9; i += 3) {\n\t\t\t\tans |= (data[i] === data[i + 1] &&\n\t\t\t\tdata[i] === data[i + 2] &&\n\t\t\t\tdata[i] !== '')\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\n\t\t// Checks for the win condition in cols\n\t\tconst checkCol = () => {\n\t\t\tlet ans = false;\n\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\tans |= (data[i] === data[i + 3] &&\n\t\t\t\tdata[i] === data[i + 6] &&\n\t\t\t\tdata[i] !== '')\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\n\t\t// Checks for the win condition in diagonals\n\t\tconst checkDiagonal = () => {\n\t\t\treturn ((data[0] === data[4] &&\n\t\t\tdata[0] === data[8] && data[0] !== '') ||\n\t\t\t(data[2] === data[4] && data[2] === data[6] &&\n\t\t\tdata[2] !== ''));\n\t\t}\n\n\t\t// Checks if at all a win condition is present\n\t\tconst checkWin = () => {\n\t\t\treturn (checkRow() || checkCol() || checkDiagonal());\n\t\t}\n\n\t\t// Checks for a tie\n\t\tconst checkTie = () => {\n\t\t\tlet count = 0;\n\t\t\tdata.forEach((cell) => {\n\t\t\t\tif (cell !== '') {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn count === 9;\n\t\t}\n\n\t\t// Setting the winner in case of a win\n\t\tif (checkWin()) {\n\t\t\tsetWinner(turn === 0 ? \"Player 2 Wins!\" :\n\t\t\t\"Player 1 Wins!\");\n\t\t} else if (checkTie()) {\n\n\t\t\t// Setting the winner to tie in case of a tie\n\t\t\tsetWinner(\"It's a Tie!\");\n\t\t}\n\n\t})\n\n\treturn (\n\t\t<div ref={boardRef} className=\"board\">\n\t\t\t<div className=\"input input-1\"\n\t\t\t\tonClick={(e) => draw(e, 1)}></div>\n\t\t\t<div className=\"input input-2\"\n\t\t\t\tonClick={(e) => draw(e, 2)}></div>\n\t\t\t<div className=\"input input-3\"\n\t\t\t\tonClick={(e) => draw(e, 3)}></div>\n\t\t\t<div className=\"input input-4\"\n\t\t\t\tonClick={(e) => draw(e, 4)}></div>\n\t\t\t<div className=\"input input-5\"\n\t\t\t\tonClick={(e) => draw(e, 5)}></div>\n\t\t\t<div className=\"input input-6\"\n\t\t\t\tonClick={(e) => draw(e, 6)}></div>\n\t\t\t<div className=\"input input-7\"\n\t\t\t\tonClick={(e) => draw(e, 7)}></div>\n\t\t\t<div className=\"input input-8\"\n\t\t\t\tonClick={(e) => draw(e, 8)}></div>\n\t\t\t<div className=\"input input-9\"\n\t\t\t\tonClick={(e) => draw(e, 9)}></div>\n\t\t</div>\n\t)\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}